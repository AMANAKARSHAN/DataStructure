!SESSION 2022-02-21 21:12:47.312 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-21 21:13:02.413
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-21 21:13:02.413
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4182a651,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7791ff50,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-21 21:13:02.413
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@46de118b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@55682482,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-21 21:13:13.409
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-21 21:21:32.034 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-21 21:21:41.622
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-21 21:21:41.622
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5c740c5a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7fd2a67a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-21 21:21:41.622
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@163df259,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@405603b6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-21 21:21:45.777
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-25 19:37:21.290 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-25 19:37:39.662
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-25 19:37:39.662
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1c2cdc67,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4c28f97e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-25 19:37:39.662
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@21d8da75,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5a1c7619,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-25 19:37:44.706
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-26 10:51:56.088 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-02-26 10:52:04.212
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-02-26 10:52:06.985
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-26 10:52:06.985
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69a76b74,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dd443c1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-26 10:52:06.985
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2aafa84f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@448892f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-26 10:52:11.390
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-03 06:33:12.403 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-03 06:33:43.328
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-03 06:33:43.328
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@199806aa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@300aa927,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-03 06:33:43.328
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fa11fda,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24e1e90a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-03 06:33:52.164
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.ide 4 4 2022-03-03 22:01:49.397
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:683)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.LocalResourceManager.allocate(LocalResourceManager.java:72)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImage(ResourceManager.java:175)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.getImage(AbstractContributionItem.java:151)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.updateIcons(AbstractContributionItem.java:177)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.update(AbstractContributionItem.java:127)
	at org.eclipse.e4.ui.workbench.renderers.swt.AbstractContributionItem.fill(AbstractContributionItem.java:264)
	at org.eclipse.jface.action.MenuManager.doItemFill(MenuManager.java:729)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:806)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:673)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.scheduleManagerUpdate(MenuManagerRenderer.java:1227)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.processContents(MenuManagerRenderer.java:655)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.subscribeTopicChildAdded(MenuManagerRenderer.java:325)
	at jdk.internal.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.internal.di.UIEventObjectSupplier$UIEventHandler.handleEvent(UIEventObjectSupplier.java:64)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:228)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.emf.ecore.util.EcoreEList.dispatchNotification(EcoreEList.java:249)
	at org.eclipse.emf.common.notify.impl.NotifyingListImpl.addUnique(NotifyingListImpl.java:356)
	at org.eclipse.emf.common.util.AbstractEList.add(AbstractEList.java:340)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributionRecord.mergeIntoModel(ContributionRecord.java:253)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.processAddition(MenuManagerRenderer.java:551)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.generateContributions(MenuManagerRenderer.java:531)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.processContributions(MenuManagerRenderer.java:499)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.processContributions(MenuManagerRenderer.java:502)
	at org.eclipse.e4.ui.workbench.renderers.swt.MenuManagerRenderer.createWidget(MenuManagerRenderer.java:417)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:994)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:543)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:527)
	at org.eclipse.ui.internal.WorkbenchWindow.setup(WorkbenchWindow.java:857)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:995)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:140)
	at org.eclipse.e4.core.internal.di.InjectorImpl.inject(InjectorImpl.java:96)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.inject(ContextInjectionFactory.java:83)
	at org.eclipse.ui.internal.Workbench.createWorkbenchWindow(Workbench.java:1469)
	at org.eclipse.ui.internal.Workbench.openWorkbenchWindow(Workbench.java:2472)
	at org.eclipse.ui.internal.Workbench.getWorkbenchPage(Workbench.java:1943)
	at org.eclipse.ui.internal.Workbench.setReference(Workbench.java:1988)
	at org.eclipse.ui.internal.Workbench.lambda$10(Workbench.java:1879)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.lambda$0(UIEventHandler.java:38)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4779)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:228)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl.setContext(PartImpl.java:469)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:543)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:527)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:994)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1209)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:676)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:672)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:762)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:727)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:711)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1082)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui.ide 4 4 2022-03-03 22:01:49.402
!MESSAGE Not properly disposed SWT resource
!STACK 0
java.lang.Error: SWT Resource was not properly disposed
	at org.eclipse.swt.graphics.Resource.initNonDisposeTracking(Resource.java:172)
	at org.eclipse.swt.graphics.Resource.<init>(Resource.java:120)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:683)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:275)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:230)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.LazyResourceManager.create(LazyResourceManager.java:103)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.wizard.Wizard.getDefaultPageImage(Wizard.java:221)
	at org.eclipse.jface.wizard.WizardPage.getImage(WizardPage.java:155)
	at org.eclipse.jface.wizard.WizardDialog.updateTitleBar(WizardDialog.java:1467)
	at org.eclipse.jface.wizard.WizardDialog.update(WizardDialog.java:1320)
	at org.eclipse.jface.wizard.WizardDialog.showStartingPage(WizardDialog.java:1281)
	at org.eclipse.jface.wizard.WizardDialog.createContents(WizardDialog.java:637)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.ui.internal.actions.NewWizardShortcutAction.run(NewWizardShortcutAction.java:119)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SESSION 2022-03-03 22:37:01.577 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-03 22:37:46.258
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-03 22:37:46.258
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1f4dd016,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@396f2724,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-03 22:37:46.258
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1b465fa9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@28b2e4d8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-03 22:37:59.633
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-04 12:07:43.429 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-04 12:08:00.552
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-04 12:08:00.552
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4cadd4d4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7538cfe6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-04 12:08:00.552
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1f4dd016,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@396f2724,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-04 12:08:05.857
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-05 19:26:48.959 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-03-05 19:27:08.658
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-03-05 19:27:26.799
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-05 19:27:26.800
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fbe8fd3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1ab268bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-05 19:27:26.800
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2fafa7b5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@181098bf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-05 19:27:35.709
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-06 08:08:02.621 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-06 08:08:11.103
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-06 08:08:11.103
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e57b783,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73b8ab2c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-06 08:08:11.103
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5600a278,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@549d14fe,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-06 08:08:16.595
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-06 13:13:30.962 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-06 13:14:27.246
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-06 13:14:27.246
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@470c4229,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6408be5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-06 13:14:27.246
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e57b783,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73b8ab2c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-06 13:14:33.248
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-07 09:47:26.079 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-07 09:47:40.837
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-07 09:47:40.837
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@470c4229,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6408be5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-07 09:47:40.837
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e57b783,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73b8ab2c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-07 09:47:45.589
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2022-03-07 17:20:30.924
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)
!SESSION 2022-03-07 23:50:23.834 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-07 23:50:31.917
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-07 23:50:31.917
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@23e9dd78,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@470c4229,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-07 23:50:31.918
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6408be5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e57b783,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-07 23:50:36.152
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-08 17:45:26.288 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-08 17:46:24.598
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-08 17:46:24.598
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@23e9dd78,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@470c4229,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-08 17:46:24.598
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6408be5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e57b783,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-08 17:46:32.316
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-09 01:32:43.928 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-09 01:32:50.843
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-09 01:32:50.843
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6408be5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e57b783,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-09 01:32:50.843
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73b8ab2c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5600a278,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-09 01:32:55.366
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:09.560
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.121
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.133
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.139
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.166
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.187
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.257
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.269
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.289
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.314
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.328
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:34:10.353
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)
!SESSION 2022-03-09 01:34:31.005 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-09 01:34:43.781
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-09 01:34:43.782
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@470c4229,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6408be5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-09 01:34:43.782
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e57b783,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73b8ab2c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-09 01:34:49.240
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2022-03-09 01:51:37.656
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.io.IOException: Output Stream is closed
	at org.eclipse.ui.console.IOConsoleOutputStream.encodedWrite(IOConsoleOutputStream.java:265)
	at org.eclipse.ui.console.IOConsoleOutputStream.write(IOConsoleOutputStream.java:260)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$StreamListener.streamAppended(ProcessConsole.java:802)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$1.run(OutputStreamMonitor.java:172)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.fireStreamAppended(OutputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:259)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:228)
	at java.base/java.lang.Thread.run(Thread.java:834)

!ENTRY org.eclipse.eclemma.core 4 5013 2022-03-09 01:51:39.356
!MESSAGE Error while dumping coverage data (code 5013).
!STACK 0
java.net.SocketException: Connection reset
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:200)
	at java.base/java.io.FilterInputStream.read(FilterInputStream.java:83)
	at org.jacoco.core.data.ExecutionDataReader.read(ExecutionDataReader.java:84)
	at org.eclipse.eclemma.internal.core.MemoryExecutionDataSource.readFrom(MemoryExecutionDataSource.java:69)
	at org.eclipse.eclemma.internal.core.launching.AgentServer.run(AgentServer.java:115)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.debug.core 4 2 2022-03-09 01:51:39.538
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.debug.core".
!STACK 0
org.eclipse.swt.SWTException: Device is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4907)
	at org.eclipse.swt.SWT.error(SWT.java:4822)
	at org.eclipse.swt.SWT.error(SWT.java:4793)
	at org.eclipse.swt.widgets.Display.error(Display.java:1272)
	at org.eclipse.swt.widgets.Display.getThread(Display.java:2616)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.handleStatus(Prompter.java:65)
	at org.eclipse.eclemma.internal.core.EclEmmaCorePlugin.showPrompt(EclEmmaCorePlugin.java:168)
	at org.eclipse.eclemma.internal.core.EclEmmaCorePlugin.access$2(EclEmmaCorePlugin.java:158)
	at org.eclipse.eclemma.internal.core.EclEmmaCorePlugin$2.checkExecutionData(EclEmmaCorePlugin.java:87)
	at org.eclipse.eclemma.internal.core.EclEmmaCorePlugin$2.handleDebugEvents(EclEmmaCorePlugin.java:78)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run(DebugPlugin.java:1214)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch(DebugPlugin.java:1248)
	at org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run(DebugPlugin.java:480)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.debug.core 4 125 2022-03-09 01:51:39.539
!MESSAGE An exception occurred while dispatching debug events.
!STACK 0
org.eclipse.swt.SWTException: Device is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4907)
	at org.eclipse.swt.SWT.error(SWT.java:4822)
	at org.eclipse.swt.SWT.error(SWT.java:4793)
	at org.eclipse.swt.widgets.Display.error(Display.java:1272)
	at org.eclipse.swt.widgets.Display.getThread(Display.java:2616)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.handleStatus(Prompter.java:65)
	at org.eclipse.eclemma.internal.core.EclEmmaCorePlugin.showPrompt(EclEmmaCorePlugin.java:168)
	at org.eclipse.eclemma.internal.core.EclEmmaCorePlugin.access$2(EclEmmaCorePlugin.java:158)
	at org.eclipse.eclemma.internal.core.EclEmmaCorePlugin$2.checkExecutionData(EclEmmaCorePlugin.java:87)
	at org.eclipse.eclemma.internal.core.EclEmmaCorePlugin$2.handleDebugEvents(EclEmmaCorePlugin.java:78)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.run(DebugPlugin.java:1214)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.debug.core.DebugPlugin$EventNotifier.dispatch(DebugPlugin.java:1248)
	at org.eclipse.debug.core.DebugPlugin$EventDispatchJob.run(DebugPlugin.java:480)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2022-03-10 07:54:29.336 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-10 07:54:39.633
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-10 07:54:39.633
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e57b783,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73b8ab2c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-10 07:54:39.633
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5600a278,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@549d14fe,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-10 07:54:45.201
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.eclemma.core 4 5013 2022-03-10 08:08:10.114
!MESSAGE Error while dumping coverage data (code 5013).
!STACK 0
java.net.SocketException: Software caused connection abort: socket write error
	at java.base/java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.base/java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:110)
	at java.base/java.net.SocketOutputStream.write(SocketOutputStream.java:129)
	at java.base/java.io.DataOutputStream.writeChar(DataOutputStream.java:182)
	at org.jacoco.core.data.ExecutionDataWriter.writeHeader(ExecutionDataWriter.java:75)
	at org.jacoco.core.data.ExecutionDataWriter.<init>(ExecutionDataWriter.java:64)
	at org.jacoco.core.runtime.RemoteControlWriter.<init>(RemoteControlWriter.java:41)
	at org.eclipse.eclemma.internal.core.launching.AgentServer.run(AgentServer.java:110)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.core.jobs 2 2 2022-03-10 08:09:54.747
!MESSAGE Job found still running after platform shutdown.  Jobs should be canceled by the plugin that scheduled them during shutdown: org.eclipse.ui.internal.console.ConsolePatternMatcher$MatchJob

!ENTRY org.eclipse.core.jobs 2 2 2022-03-10 08:09:54.748
!MESSAGE Job found still running after platform shutdown.  Jobs should be canceled by the plugin that scheduled them during shutdown: org.eclipse.ui.internal.console.ConsolePatternMatcher$MatchJob
!SESSION 2022-03-10 08:10:34.953 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-10 08:10:44.366
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-10 08:10:44.366
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7ebc5be6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4627dfda,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-10 08:10:44.366
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1f3361e9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@eebc0db,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-10 08:10:48.626
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-11 11:13:19.019 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-11 11:13:27.050
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-11 11:13:27.050
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65d23aa3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@52eca410,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-11 11:13:27.050
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63d0e8d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69a76b74,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-11 11:13:31.626
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-12 10:32:21.456 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-12 10:48:14.637
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-12 10:48:14.637
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65d23aa3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@52eca410,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-12 10:48:14.637
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63d0e8d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69a76b74,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-12 10:48:22.036
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-12 17:00:30.071 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-12 17:00:37.581
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-12 17:00:37.581
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1169fdfd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@75add13c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-12 17:00:37.581
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@224d537d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@450d10cb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-12 17:00:43.402
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2022-03-12 23:52:43.420
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package LinkedList;

public class LinkedListOperation extends LinkedList{
	
	public void RotateClockByK(int k) {
		int c=1,n=this.size();
		Node temp=head;
		k=k%n;
		if(k>=1) {
		while(c<n-k) {
			temp=temp.next;
			c++;
		}
		Node temp1=temp;
		temp=temp.next;
		temp1.next=null;
		temp1=temp;
		while(temp.next!=null)
			temp=temp.next;
		temp.next=head;
		head=temp1;
	}
		
}
	
	public void RotateAntiClockByK(int k) {
		int c=1,n=this.size();
		Node temp=head;
		k=k%n;
		if(k>=1) {
		while(c<k) {
			temp=temp.next;
			c++;
		}
		Node temp1=head;
		head=temp.next;
		temp.next=null;
		temp=head;
		while(temp.next!=null)
			temp=temp.next;
		temp.next=temp1;
	}
		
	}
	
	public int size() {
		if(head==null)
			return 0;
		Node temp=head;
		int c=0;
		while(temp!=null) {
			temp=temp.next;
			c++;
		}
		return c;
	}
	
	
	public void reverseLinkedList() {
			if(head==null) {
				System.out.println("Linked list is empty");
				return;
			}
			
			Node pre_p = null;
			Node curr_p = head;
			Node next_p;
			while(curr_p!=null) {
				next_p=curr_p.next;
				curr_p.next=pre_p;
				pre_p=curr_p;
				curr_p=next_p;
			}
			
			head=pre_p;
	}
	
	public int middleElement() {
		if(head==null) {
			System.out.println("Linked list is empty");
			return -1;
		}
		Node slow_p= head , fast_p=head;
		(fast_p.next!=null || fast_p.next.next!=null || fast_p!=null) {
			slow_p=slow_p.next;
			fast_p=fast_p.next.next;
			System.out.println("Linked list is empty");
		}
		
		return slow_p.data;
		
	}
	
	
	
	public static void main(String[] args) {
		LinkedListOperation ll1 = new LinkedListOperation();
		ll1.addNodeFirst(23);
		ll1.addNodeFirst(56);
		ll1.addNodeFirst(76);
		ll1.addNodeFirst(53);
		ll1.addNodeFirst(120);
		ll1.addNodeFirst(7);
		ll1.printLinkedList();
		System.out.println("Size of Linked List:"+ll1.size());
		ll1.RotateAntiClockByK(6);
		ll1.printLinkedList();
		ll1.RotateClockByK(1);
		ll1.printLinkedList();
		ll1.reverseLinkedList();
		ll1.printLinkedList();
		System.out.println("Middel Element:"+ll1.middleElement());
		ll1.printLinkedList();

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2693)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2041)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-03-12 23:52:43.564
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2693)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2041)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-03-12 23:52:43.565
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2693)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2041)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2022-03-13 09:00:50.571 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-13 09:01:00.923
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-13 09:01:00.923
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65d23aa3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@52eca410,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-13 09:01:00.923
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63d0e8d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69a76b74,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-13 09:01:04.376
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-16 09:25:27.318 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-16 09:25:54.128
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-16 09:25:54.128
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2aafa84f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@448892f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-16 09:25:54.128
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1626bddf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@29532e91,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-16 09:26:02.788
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-17 21:33:12.294 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-17 22:14:47.640
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-17 22:14:47.640
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65503a26,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@13aa54f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-17 22:14:47.640
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26d7cb0d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@23e9dd78,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-17 22:14:55.024
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-24 22:10:03.800 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-03-24 22:10:13.615
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-03-24 22:10:20.082
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-24 22:10:20.082
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4d174189,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@628bd77e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-24 22:10:20.082
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@c30f26d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5d74507c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-24 22:10:25.191
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-25 09:22:48.631 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-03-25 09:22:56.468
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-25 09:22:56.468
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2aafa84f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@448892f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-25 09:22:56.468
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1626bddf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@29532e91,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-25 09:23:01.560
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-26 09:14:48.680 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-03-26 09:14:53.038
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-03-26 09:14:55.677
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-26 09:14:55.677
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a984952,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16944b58,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-26 09:14:55.677
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dbc607d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62b42406,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-26 09:15:00.821
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-26 19:28:35.054 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-03-26 19:28:42.682
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-03-26 19:28:48.789
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-26 19:28:48.789
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6a552721,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3815a7d1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-26 19:28:48.789
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24dc150c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1d2d4d7a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-26 19:28:53.158
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-26 23:32:42.706 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-03-26 23:32:52.049
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-03-26 23:32:59.232
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-26 23:32:59.232
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@632b5c79,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6a552721,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-26 23:32:59.232
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3815a7d1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24dc150c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-26 23:33:05.026
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-27 00:27:11.696 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-03-27 00:27:19.805
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-03-27 00:27:26.812
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-27 00:27:26.812
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@632b5c79,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6a552721,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-27 00:27:26.812
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3815a7d1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24dc150c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-27 00:27:32.310
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-29 12:33:38.470 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-03-29 12:33:52.223
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-03-29 12:34:04.720
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-29 12:34:04.720
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1d2d4d7a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e020dd1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-29 12:34:04.720
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4bbc02ef,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@f0c1ae1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-29 12:34:12.814
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-03 00:48:24.852 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-03 00:48:38.373
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-03 00:48:52.185
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-03 00:48:52.185
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dbc607d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62b42406,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-03 00:48:52.185
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a0e33db,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3ef46749,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-03 00:49:00.231
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-03 18:14:39.492 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-04-03 18:14:47.762
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-03 18:14:47.762
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1626bddf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@29532e91,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-03 18:14:47.762
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7e691624,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7ef60c02,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-03 18:14:53.753
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-04 15:56:51.703 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-04-04 15:57:06.043
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-04 15:57:06.043
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65d23aa3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@52eca410,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-04 15:57:06.043
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63d0e8d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69a76b74,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-04 15:57:13.648
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-04 18:00:48.128 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-04-04 18:02:13.885
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-04 18:02:13.885
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dd443c1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2aafa84f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-04 18:02:13.885
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@448892f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1626bddf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-04 18:02:20.800
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-05 00:10:14.809 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-05 00:10:26.707
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-05 00:10:43.151
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-05 00:10:43.151
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2bd2430f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2890e479,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-05 00:10:43.151
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6eb00cbe,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74e4be21,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-05 00:10:53.572
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-05 12:14:03.002 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-05 12:14:14.542
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-05 12:14:21.340
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-05 12:14:21.340
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a984952,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16944b58,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-05 12:14:21.340
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dbc607d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62b42406,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-05 12:14:33.574
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-05 13:47:54.642 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-04-05 13:48:06.241
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-05 13:48:06.241
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2aafa84f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@448892f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-05 13:48:06.241
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1626bddf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@29532e91,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-05 13:48:13.164
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-07 01:12:39.377 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-04-07 01:13:00.263
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-07 01:13:00.263
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@153c6603,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24e2355c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-07 01:13:00.263
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@19739906,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65503a26,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-07 01:13:06.612
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-07 11:18:10.519 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-04-07 11:18:36.090
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-07 11:18:36.090
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2aafa84f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@448892f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-07 11:18:36.090
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1626bddf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@29532e91,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-07 11:18:48.004
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-07 15:18:44.252 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-04-07 15:18:52.065
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-07 15:18:52.065
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dd443c1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2aafa84f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-07 15:18:52.065
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@448892f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1626bddf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-07 15:18:57.673
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-10 23:13:53.325 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-10 23:14:02.274
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-10 23:14:09.661
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-10 23:14:09.661
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74e4be21,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4d174189,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-10 23:14:09.661
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@628bd77e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@c30f26d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-10 23:14:16.055
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-13 21:21:42.469 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-13 22:00:37.166
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-13 22:00:43.985
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-13 22:00:43.985
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a984952,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16944b58,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-13 22:00:43.985
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dbc607d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62b42406,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-13 22:00:49.894
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.ui 4 10001 2022-04-13 22:02:46.710
!MESSAGE Internal Error
!STACK 1
Java Model Exception: javax.net.ssl.SSLException: Read timed out
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:943)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: javax.net.ssl.SSLException: Read timed out
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:127)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:264)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:259)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:137)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1152)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1063)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:402)
	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:567)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.followRedirect0(HttpURLConnection.java:2774)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.followRedirect(HttpURLConnection.java:2686)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1849)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:334)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	... 9 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:448)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:165)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:108)
	... 21 more
Caused by: javax.net.ssl.SSLException: Read timed out
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:127)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:264)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:259)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:137)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1152)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1063)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:402)
	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:567)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.followRedirect0(HttpURLConnection.java:2774)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.followRedirect(HttpURLConnection.java:2686)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1849)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:334)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:448)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:165)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:108)
	... 21 more
!SUBENTRY 1 org.eclipse.jdt.core 4 985 2022-04-13 22:02:46.712
!MESSAGE Read timed out
!STACK 0
javax.net.ssl.SSLException: Read timed out
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:127)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:264)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:259)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:137)
	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1152)
	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1063)
	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:402)
	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:567)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.followRedirect0(HttpURLConnection.java:2774)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.followRedirect(HttpURLConnection.java:2686)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1849)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:334)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/java.net.SocketInputStream.socketRead0(Native Method)
	at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168)
	at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:448)
	at java.base/sun.security.ssl.SSLSocketInputRecord.decode(SSLSocketInputRecord.java:165)
	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:108)
	... 21 more
!SESSION 2022-04-14 23:25:17.080 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-14 23:25:21.935
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-14 23:25:24.576
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-14 23:25:24.576
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@c30f26d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5d74507c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-14 23:25:24.576
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a984952,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16944b58,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-14 23:25:29.822
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-15 10:12:35.131 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=11.0.4
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-15 10:13:28.176
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-15 10:13:32.093
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-15 10:13:32.093
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16944b58,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dbc607d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-15 10:13:32.093
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62b42406,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a0e33db,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-04-15 10:13:39.404
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Aman'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:35:31.315
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 low++;
					 high--;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:35:31.322
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:35:31.324
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:35:32.310
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 low++;
					 high--;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:35:32.316
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:35:32.320
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:35:33.106
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 low++;
					 high--;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:35:33.111
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:35:33.115
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:09.904
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:09.908
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:09.912
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:09.979
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:09.981
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:09.982
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:11.519
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:11.522
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:11.524
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:14.970
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripl
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:14.971
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:14.972
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:15.239
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripl
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:15.243
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:15.246
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:16.053
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 triplet
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:16.059
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:16.061
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:16.092
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 triplet
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:16.097
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:16.100
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:18.601
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:18.603
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:18.604
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:18.655
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:18.656
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:18.658
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:19.674
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:19.677
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:19.680
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:19.769
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:19.773
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:19.775
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:20.742
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tr
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:20.745
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:20.747
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:20.821
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tr
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:20.824
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:20.826
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:22.298
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tri
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:22.301
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:22.302
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:23.866
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=triplet
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:23.870
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:23.873
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:24.107
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=triplet
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:24.108
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:24.108
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:26.917
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:26.919
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:26.919
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:26.944
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:26.946
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:26.947
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:30.446
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:30.447
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:30.448
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:30.475
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:30.477
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:30.478
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:39.988
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+high
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:39.991
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:39.993
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:40.078
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+high
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:40.080
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:40.081
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:40.695
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+high-
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:40.697
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:40.699
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:41.953
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+high-low
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:41.956
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:41.958
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:42.044
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+high-low
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:42.046
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:42.048
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:43.102
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+high-low;
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:43.105
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:43.108
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:43.174
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+high-low;
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:43.177
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:43.179
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:45.070
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount=tripletCount+high-low;
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:45.074
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:45.076
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:45.149
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount =tripletCount+high-low;
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:45.153
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:45.155
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:45.218
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount =tripletCount+high-low;
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:45.222
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:45.224
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:45.644
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount =tripletCount+high-low;
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-15 10:36:45.646
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-15 10:36:45.647
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:46.241
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount =tripletCount+high-low;
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:46.244
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:46.247
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:46.319
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount =tripletCount+high-low;
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-15 10:36:46.321
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-15 10:36:46.321
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-15 10:36:47.195
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package Array;

import java.util.*;

public class ArrayApplication {
	int len;
	int arr[];
	
	public void insertElement(int arr[]) {
		this.arr=arr;
		len=arr.length;
	}
	
	public void printElement() {
		System.out.println();
		System.out.print("Array: ");
		for(int i=0;i<len;i++)
			System.out.print(arr[i]+" ");
	}
	
	
	//Find Largest Contiguous Sum Subarray 
	public int largestContiguousSubArrayNegative() {
		int max_so_far,curr_max;
		max_so_far = curr_max = 0;
		for(int i=0;i<len;i++) {
			curr_max=Math.max(arr[i],curr_max+arr[i]);
			max_so_far=Math.max(curr_max,max_so_far);
		}
		return max_so_far;
	}
	
	
	//Sort an array of 0s, 1s, 2s | Dutch National Flag Problem
	public void sortedArrayWith0s1s2sbest() {
		int low=0;
		int high=len-1;
		int mid=0;
		while(mid<=high) {
			switch(arr[mid]) {
			case 0:
				if(arr[low]!=arr[mid]) {
					int t=arr[low];
					arr[low]=arr[mid];
					arr[mid]=t;
					}
				low++;
				mid++;
				break;
			case 1:
				mid++;
				break;
			case 2:
				if(arr[high]!=arr[mid]) {
					int t=arr[high];
					arr[high]=arr[mid];
					arr[mid]=t;
					}
				high--;
			}
		}
	}
	
	
	//Find Equilibrium point where elements before & after it has equal sum
	public int equilibriumPoint() {
		int sum=0,sum_so_far=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
		}
		for(int j=0;j<len;j++) {
			sum=sum-arr[j];
			sum_so_far=sum_so_far+arr[j];
			if(sum==sum_so_far)
				return j+1;
		}
		
		return -1;
	}
	
	
	//Leaders in Array | Print Elements which are greater than all it's right elements
	public int leader(){
		int max=arr[len-1];
		for(int j=len-2;j>=0;j--) {
			if(arr[j]>max)
				max=arr[j];
		}
		return max;
	}
	
	
	//Find Missing Number from 1 to n range in Unsorted array
	public int missingNum() {
		int sum= len*(len-1)/2;
		for(int i=0;i<len;i++)
			sum=sum-arr[i];
		
		return sum;
	}
	
	
	//Search element using iterative binary Search 
	public int itebinarySearch(int val) {
		int l=0;
		int h=len-1,mid;
		while(l<=h) {
			mid=(l+h)/2;
			if(arr[mid]==val)
				return mid;
			else if(arr[mid]<val)
				l=mid+1;
			else
				h=mid-1;
		}
		
	return -1;	
	}
	
	
	//Search element using recursive binary Search	
	public int recbinarySearch(int val,int low,int high) {
		int mid=low+(low+high)/2;
		if(arr[mid]==val)
			return mid;
		else if(arr[mid]<val)
			return recbinarySearch(val,mid+1,high);
		else
			return recbinarySearch(val,low,mid-1);
	}
	
	
	//Check if there exists a pair which matches given Sum using Sorting
	public boolean pairExistOrNotAddition_sorting(int sum) {
		Arrays.sort(arr);
		int low=0;
		int high=len-1,val;
		val=arr[low]+arr[high];
		while(low<high) {
			val=arr[low]+arr[high];
			if(val==sum)
				return true;
			else if(val<sum) {
				low=low+1;
			}
			else {
				high=high-1;
			}
		}
		return false;
	}
	
	
	//Check if there exists a pair which matches given Sum using Hashing	
	public boolean pairExistOrNotAddition_hashing(int sum) {
		Set <Integer> st= new HashSet<Integer>();
		for(int i=0;i<len;i++) {
			if(st.contains(sum-arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	//Check if there exists a pair which matches given Multiplication using Hashing	
	//It can'nt be done by using Sorting
	public boolean pairExistOrNotMul_hashing(int sum) {
		Set <Integer> st= new HashSet<>();
		for(int i=0;i<len;i++) {
			if(sum%arr[i]==0 && st.contains(sum/arr[i]))
				return true;
			else
				st.add(arr[i]);
		}
		
		return false;
	}
	
	
	//Find 1st occurrence of a value in array if adjacent values differ by 1
	public int findFirstOccurenceIfAdjencentValueDiffBy1(int val) {
		int start=0;
		
		while(start<len) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val);
				start=start+diff;
		}
		return start;
	}
	

	 //Find 1st occurrence of a value if adjacent values differ by at most K
	public int findFirstOccurenceIfAdjencentValueDiffByAtMostk(int val,int k) {
		int start=0;
		
		while(start<len-1) {
			if(arr[start]==val)
				return start;
			
			int diff=Math.abs(arr[start]-val)/k;
				diff=Math.max(diff, 1);
				start=start+diff;
		}
		return start;
	}
	
	
	//Find the first repeating value in array
	public int firstRepeatingValueInArray() {
		int firstRepeat=-1;
		Set<Integer> st = new HashSet<>();
		
		for(int i=len-1;i>=0;i--) {
			if(st.contains(arr[i]))
				firstRepeat=arr[i];
			else
				st.add(arr[i]);
		}
		
		return firstRepeat;
	}
	
	
	//Find max multiplication of any two numbers in array
	public int pairMaxMultiplication() {
		int min1=Integer.MAX_VALUE;
		int min2=Integer.MAX_VALUE;
		int max1=Integer.MIN_VALUE;
		int max2=Integer.MIN_VALUE;
		
		for(int i=0;i<len;i++) {
			if(arr[i]<min1) {
				min2=min1;
				min1=arr[i];
			}
			
			else if(arr[i]<min2)
				min2=arr[i];
			
			if(arr[i]>max1) {
				max2=max1;
				max1=arr[i];
			}
			
			else if(arr[i]>max2)
				max2=arr[i];
		}
		
		if(min1*min2 > max1*max2)
			return min1*min2;
		else
			return max1*max2;
		
	}

	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum1(int given_sum) {
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=0;
			for(int j=i;j<len;j++) {
				sum=sum+arr[j];
				if(sum==given_sum)
					System.out.println("Subarray : "+i+" "+j);
			}
		}
	}
	
	//Find Sub-array whose sum is equal to given sum
	public void subArrayOfGivenSum2(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				System.out.println("Subarray : "+0+" "+end);
				//return;
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				System.out.println("Subarray : "+ (start+1) + " "+ end);
			}
		mp.put(totalSumTillNow, end);
		}
	}
	
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK1(int k) {
		int kthSum=0,j=0,maxSum;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		for(int i=0;i<len-k;i++) {
			if(maxSum<kthSum) 
				maxSum=kthSum;
//			else {
//				System.out.println(kthSum +" "+ (i-1) +" "+ (i+k-1));
//				kthSum=kthSum-arr[i-1]+arr[i+k-1];
//				System.out.println(kthSum);
//				}
			if(i!=0)	
				kthSum=kthSum-arr[i-1]+arr[i+k-1];
		}
		
	return maxSum;	
	}
	
	//Find Maximum Sum of sub-array with given size K
	public int maxSumSubArrayWithSizeK2(int k) {
		int kthSum=0,j=0,maxSum;
		int high=k;
		int low=0;
		while(j<k) {
			kthSum=kthSum+arr[j++];
		}
		maxSum=Integer.MIN_VALUE;
		while(high<len) {
			if(maxSum<kthSum)
				maxSum=kthSum;
			kthSum=kthSum-arr[low++]+arr[high++];
			
		}
		
	return maxSum;	
	}
	
	
	//Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum
	public int maxSumSubArray() {
		int maxSum=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<len;i++) {
			sum=sum+arr[i];
			if(sum>maxSum)
			maxSum=sum;
			
			if(sum<0)
				sum=0;
		}
		return maxSum;
	}
	
	
	//Find smallest sub-array length with given Sum
	public int smallestSubArrayOfGivenSum(int given_sum) {
		HashMap<Integer,Integer> mp = new HashMap<>();
		int totalSumTillNow=0;
		int smallestLen=Integer.MAX_VALUE;
		for(int end=0;end<len;end++) {
			totalSumTillNow = totalSumTillNow+arr[end];
			
			if(totalSumTillNow==given_sum) {
				//System.out.println("Subarray : "+0+" "+end);
				smallestLen=Math.min(smallestLen, end+1);
			}
			int windowSum=totalSumTillNow-given_sum;
			if(mp.containsKey(windowSum)) {
				int start=mp.get(windowSum);
				//System.out.println("Subarray : "+ (start+1) + " "+ end);
				smallestLen=Math.min(smallestLen, end-start);
			}
		mp.put(totalSumTillNow, end);
		}
		return smallestLen;
	}
	
	
	//Shuffle the array number | Shuffle the Cards
	 public void shuffleNumbers() {
		 Random randomObject = new Random();
		 
		 for(int i=0;i<len;i++)
		 { int randomValue=randomObject.nextInt(len);
		   int currentValue=arr[i];
		   arr[i]=arr[randomValue];
		   arr[randomValue]=currentValue;
		 }
		 
	 }
	
	 
	 
	 // Remove all duplicates from Sorted Array
	 public int removeDuplicate() {
		 int start=1;
		 for(int i=1;i<len;i++) {
			 if(arr[i]!=arr[i-1]) {
				 arr[start]=arr[i];
			 }
		}
		 
		 return start;
	 }
	 
	 //Square a sorted array of +/- numbers in sorted way
	 public void SquareInSortedManner() {
		 int ar[]=new int[len];
		 int j=len-1;
		 int start=0;
		 int end=len-1;
		 while(start<=end) {
			 if(arr[start]*arr[start] >= arr[end]*arr[end]) {
				 ar[j--]=arr[start]*arr[start];
				 start++;
			 }
			 else {
				 ar[j--]=arr[end]*arr[end];
				 end--;
			 }
				 
		 }
		 System.out.println("Array=");
		 for(int i=0;i<len;i++)
			 System.out.print(ar[i]+" ");
		 
	 }
	 
	 //Find all Triplets for given Sum | Check if Triplet exists for given Sum
	 public List<List<Integer>> findTriplets(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allTriplets = new ArrayList<>();
		 
		 for(int i=0;i<len-2;i++) {
			 int Sum=targetSum-arr[i];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allTriplets.add(Arrays.asList(arr[low],arr[high],arr[i]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	 
	 
	 
	 
	 //Find all Quadruple for given Sum
	 public List<List<Integer>> findQuadruple(int targetSum){
		 Arrays.sort(arr);
		 
		 
		 List<List<Integer>> allquadruples = new ArrayList<>();
		 
		 for(int j=0;j<len-3;j++) {
		 for(int i=j+1;i<len-2;i++) {
			 int Sum=targetSum-arr[i]-arr[j];
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==Sum) {
					 allquadruples.add(Arrays.asList(arr[low],arr[high],arr[i],arr[j]));
					 low++;
					 high--;
				 }
				 else if(arr[low]+arr[high]<Sum)
					 low++;
				 else
					 high--;
			}
		 }
		 }
		 
		 
	return allquadruples;	 
	 }
	
	 
	 
	 public int tripletsWithLessThanGivenSum(int targetSum){
		 Arrays.sort(arr);
		 int tripletCount=0;
		 
		 for(int i=0;i<len-2;i++) {
			 int low=i+1;
			 int high=len-1;
			 while(low<high) {
				 if(arr[low]+arr[high]==targetSum) {
					 tripletCount = tripletCount+high-low;
					 low++;
				 }
				 else(arr[low]+arr[high]<targetSum)
					 low++;
			}
		 }
		 
		 
	return allTriplets;	 
	 }
	
	
	public static void main(String[] args) {
		ArrayApplication ob = new ArrayApplication();
		int arr[]= {1,2,-3,4,-2,-1,3};
		ob.insertElement(arr);
//		System.out.println("Largest Contiguous SubArray = " + ob.largestContiguousSubArrayNegative());
		//ob.sortedArrayWith0s1s2sbest();
		//ob.printElement();
//		System.out.println("Equilibrium Point : "+ob.equilibriumPoint());
//		System.out.println("Binary Search Recursive : "+ob.recbinarySearch(4,0,6));
//		System.out.println("Binary Search Itirative : "+ob.itebinarySearch(4));
//		System.out.println("Leader in Array : "+ob.leader());
//	    System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_sorting(20));
//		System.out.println("Pair exist or Not for given add: "+ob.pairExistOrNotAddition_hashing(20));
//     	System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffBy1(0));
//		System.out.println("Find First Occurence If Adjencent Value Diff By 1 : "+ob.findFirstOccurenceIfAdjencentValueDiffByAtMostk(2));
//		System.out.println("First repeating value in array : "+ob.firstRepeatingValueInArray());
//		System.out.println("Pair exist or Not for given Multiplication: "+ob.pairExistOrNotMul_hashing(7));
//		System.out.println("Find max multiplication of any two numbers in array: " + ob.pairMaxMultiplication());
//		//ob.subArrayOfGivenSum1(4);
//		ob.subArrayOfGivenSum2(0);
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK1(3));
//		System.out.println("Find Maximum Sum of sub-array with given size K : "+ob.maxSumSubArrayWithSizeK2(3));
//		System.out.println("Find smallest sub-array length with given Sum : "+ob.smallestSubArrayOfGivenSum(0));
//		System.out.println("Find sub-array with maximum sum | Kadane Algo | Largest Subarray Sum :"+ ob.maxSumSubArray());
//		ob.SquareInSortedManner();
		System.out.println(ob.findTriplets(1));
		System.out.println(ob.findQuadruple(1));
		
		
		} 
	}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3034)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
